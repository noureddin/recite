#!/usr/bin/env perl
# vim: fdm=marker :
use v5.14; use warnings; use autodie; use utf8;
use open qw( :encoding(UTF-8) :std );
binmode STDIN, ':encoding(UTF-8)';
binmode STDOUT, ':encoding(UTF-8)';

use Unicode::Normalize qw[ NFD ];

my ($old, $new, $stt) = @ARGV;

open my $fs1, '<', $stt;
my %oldstat = map { chomp; $_ => undef } <$fs1>;
close $fs1;

my %newstat;

open my $fo, '<', $old;
open my $fn, '<', $new;

my $i;

while (1) {
    my $line_old = <$fo>;
    my $line_new = <$fn>;
    if (!defined $line_old && !defined $line_new) {
        last
    }
    if (!defined $line_old || !defined $line_new) {
        die "The two files do not have the same number of lines!\n"
    }

    ++$i;
    if (NFD($line_old) ne NFD($line_new)) {
        # printf "\e[1;32m%s\e[m", $line_old;
        # printf "\e[1;31m%s\e[m", $line_new;
        $newstat{$i} = undef;
    }
}

for my $s (sort { $a <=> $b } keys %oldstat) {
    if (!exists $newstat{$s}) {
        printf "\e[32mLine %*d went good\e[m\n", length($i), $s
    }
}

open my $fs2, '>', $stt;

for my $s (sort { $a <=> $b } keys %newstat) {
    if (!exists $oldstat{$s}) {
        printf "\e[1;31mLine %*d went bad\e[m\n", length($i), $s
    }
    printf { $fs2 } "%d\n", $s;
}

close $fs2;

printf "Total bad lines: %d\n", scalar keys %newstat;
